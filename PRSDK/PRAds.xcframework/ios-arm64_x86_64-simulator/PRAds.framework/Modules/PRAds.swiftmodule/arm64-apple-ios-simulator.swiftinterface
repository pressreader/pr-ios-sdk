// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
// swift-module-flags: -target arm64-apple-ios16.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name PRAds
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1
import DeveloperToolsSupport
import Foundation
import PRAPI
@_exported import PRAds
import PRConfiguration
import PRDIContainer
import PRLogKit
import PRPromiseKit
import PRUIKit
import PRUtils
import Swift
import SwiftUI
import UIKit
import PRUIKit.UIUtils
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc final public class AdBannerPresentation : ObjectiveC.NSObject {
  @objc final public let info: PRAds.AdBannerInfo
  @objc final public let bannerVC: UIKit.UIViewController
  @objc deinit
}
public struct GoogleAdModel {
}
@_hasMissingDesignatedInitializers @_Concurrency.MainActor @preconcurrency public class GoogleAdVC<RootView> : PRUIKit.SwiftVC<RootView, PRAds.GoogleAdModel> where RootView : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency public var adUnitId: Swift.String {
    get
  }
  @_Concurrency.MainActor @preconcurrency public var adManager: PRAds.PRGoogleAdManager? {
    get
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class InterstitialAdBannerInfo : ObjectiveC.NSObject {
  @objc final public let numArticlesBeforeAd: Swift.Int
  @objc final public let numArticlesBetweenAds: Swift.Int
  @objc final public let numAdsPerSession: Swift.Int
  @objc final public let supportedAdSizes: [CoreFoundation.CGSize]
  @objc final public let consequent: Swift.Bool
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor @preconcurrency final public class InterstitialADView : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency final public class AdBannerCollectionViewCell : UIKit.UICollectionViewCell {
  @objc(fillWithBannerPresentation:) @_Concurrency.MainActor @preconcurrency final public func fill(with banner: PRAds.AdBannerPresentation)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc public enum AdBannerPosition : Swift.Int {
  case topScrollable
  case top
  case inline
  case bottom
  case interstitial
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum AdBannerScreen : Swift.Int {
  case undefined = -1
  case home = 0
  case catalog
  case library
  case order
  case articleDetails
  case page0
  case pageNPlus1
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc @_hasMissingDesignatedInitializers @objcMembers final public class AdBannerInfo : ObjectiveC.NSObject {
  @objc final public let unitId: Swift.String
  @objc final public let screen: PRAds.AdBannerScreen
  @objc final public let position: PRAds.AdBannerPosition
  @objc final public var size: CoreFoundation.CGSize
  @objc final public let inlinePosition: Swift.Int
  @objc final public var hasAds: Swift.Bool
  @objc final public var interstitialBannerInfo: PRAds.InterstitialAdBannerInfo?
  @objc deinit
}
@objc @objcMembers final public class InterstitialAdCounter : ObjectiveC.NSObject {
  @objc final public var numOfArticleBeforeInterstitialAdDisplay: Swift.Int
  @objc final public var displayedArticles: Foundation.NSMutableSet
  @objc final public var numInterstitialAdsToDisplay: Swift.Int
  @objc final public var numArticlesBetweenInterstitialAds: Swift.Int
  @objc public init?(bannerInfo: PRAds.AdBannerInfo)
  @objc deinit
}
@objc public protocol AdDataSourceDelegate {
  @objc func presentEmbedableAds(_ ads: [PRAds.AdBannerPresentation]?)
  @objc func presentInterstitialAds(_ ads: [PRAds.AdBannerPresentation]?)
  @objc func presentFixedAds(_ ads: [PRAds.AdBannerPresentation]?)
  @objc func adChangeHandler(_ ad: PRAds.AdBannerPresentation)
  @objc optional func currentIssue() -> PRAPI.PRTitleItemExemplar?
}
@objc public class AdDataSource : ObjectiveC.NSObject {
  weak public var delegate: (any PRAds.AdDataSourceDelegate)?
  @objc public var interstitialAds: [PRAds.AdBannerPresentation]? {
    @objc get
  }
  @objc public var fixedAds: [PRAds.AdBannerPresentation]? {
    @objc get
  }
  @objc public var embedableAds: [PRAds.AdBannerPresentation]? {
    @objc get
  }
  @objc public init?(screen: PRAds.AdBannerScreen, service: any PRAds.AdsService, delegate: (any PRAds.AdDataSourceDelegate)? = nil)
  @objc public func ad(position: PRAds.AdBannerPosition) -> PRAds.AdBannerPresentation?
  public func resetAdsProvider()
  @objc public func loadAndPresentBannersWithDefaultSize()
  @objc public func loadAndPresentBanners(size: CoreFoundation.CGSize)
  @objc public func loadAndPresentBanners(width: CoreFoundation.CGFloat)
  public func presentAllBanners()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor @preconcurrency final public class InterstitialADVC : PRAds.GoogleAdVC<PRAds.InterstitialADView>, UIKit.UIScrollViewDelegate {
  @_Concurrency.MainActor @preconcurrency @objc override final public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override final public func viewWillLayoutSubviews()
  @_Concurrency.MainActor @preconcurrency final public func checkInterstitialAd(withParentViewSize parentSize: CoreFoundation.CGSize, completion: @escaping (Swift.Bool) -> ())
  @_Concurrency.MainActor @preconcurrency final public func presentAnimated(in container: UIKit.UIViewController)
  @_Concurrency.MainActor @preconcurrency final public func dismissViewsAnimated()
  @_Concurrency.MainActor @preconcurrency @objc final public func scrollViewWillEndDragging(_ scrollView: UIKit.UIScrollView, withVelocity velocity: CoreFoundation.CGPoint, targetContentOffset: Swift.UnsafeMutablePointer<CoreFoundation.CGPoint>)
  @objc deinit
}
@objc public protocol AdsService {
  @objc func requestGoogleAdsConfig(_ completion: @escaping (PRUtils.SPNode?, (any Swift.Error)?) -> ())
}
extension PRAds.GoogleAdVC : Swift.Sendable {}
extension PRAds.AdBannerPosition : Swift.Equatable {}
extension PRAds.AdBannerPosition : Swift.Hashable {}
extension PRAds.AdBannerPosition : Swift.RawRepresentable {}
extension PRAds.AdBannerScreen : Swift.Equatable {}
extension PRAds.AdBannerScreen : Swift.Hashable {}
extension PRAds.AdBannerScreen : Swift.RawRepresentable {}
